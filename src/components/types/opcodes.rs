use crate::components::dh_bus::bus::BUS;

pub trait M6502Opcodes {
    fn ADC(&mut self, bus: &mut BUS) -> u8;
    fn AND(&mut self, bus: &mut BUS) -> u8;
    fn ASL(&mut self, bus: &mut BUS) -> u8;
    fn BCC(&mut self, bus: &mut BUS) -> u8;
    fn BCS(&mut self, bus: &mut BUS) -> u8;
    fn BEQ(&mut self, bus: &mut BUS) -> u8;
    fn BIT(&mut self, bus: &mut BUS) -> u8;
    fn BMI(&mut self, bus: &mut BUS) -> u8;
    fn BNE(&mut self, bus: &mut BUS) -> u8;
    fn BPL(&mut self, bus: &mut BUS) -> u8;
    fn BRK(&mut self, bus: &mut BUS) -> u8;
    fn BVC(&mut self, bus: &mut BUS) -> u8;
    fn BVS(&mut self, bus: &mut BUS) -> u8;
    fn CLC(&mut self, bus: &mut BUS) -> u8;
    fn CLD(&mut self, bus: &mut BUS) -> u8;
    fn CLI(&mut self, bus: &mut BUS) -> u8;
    fn CLV(&mut self, bus: &mut BUS) -> u8;
    fn CMP(&mut self, bus: &mut BUS) -> u8;
    fn CPX(&mut self, bus: &mut BUS) -> u8;
    fn CPY(&mut self, bus: &mut BUS) -> u8;
    fn DEC(&mut self, bus: &mut BUS) -> u8;
    fn DEX(&mut self, bus: &mut BUS) -> u8;
    fn DEY(&mut self, bus: &mut BUS) -> u8;
    fn EOR(&mut self, bus: &mut BUS) -> u8;
    fn INC(&mut self, bus: &mut BUS) -> u8;
    fn INX(&mut self, bus: &mut BUS) -> u8;
    fn INY(&mut self, bus: &mut BUS) -> u8;
    fn JMP(&mut self, bus: &mut BUS) -> u8;
    fn JSR(&mut self, bus: &mut BUS) -> u8;
    fn LDA(&mut self, bus: &mut BUS) -> u8;
    fn LDX(&mut self, bus: &mut BUS) -> u8;
    fn LDY(&mut self, bus: &mut BUS) -> u8;
    fn LSR(&mut self, bus: &mut BUS) -> u8;
    fn NOP(&mut self, bus: &mut BUS) -> u8;
    fn ORA(&mut self, bus: &mut BUS) -> u8;
    fn PHA(&mut self, bus: &mut BUS) -> u8;
    fn PHP(&mut self, bus: &mut BUS) -> u8;
    fn PLA(&mut self, bus: &mut BUS) -> u8;
    fn PLP(&mut self, bus: &mut BUS) -> u8;
    fn ROL(&mut self, bus: &mut BUS) -> u8;
    fn ROR(&mut self, bus: &mut BUS) -> u8;
    fn RTI(&mut self, bus: &mut BUS) -> u8;
    fn RTS(&mut self, bus: &mut BUS) -> u8;
    fn SBC(&mut self, bus: &mut BUS) -> u8;
    fn SEC(&mut self, bus: &mut BUS) -> u8;
    fn SED(&mut self, bus: &mut BUS) -> u8;
    fn SEI(&mut self, bus: &mut BUS) -> u8;
    fn STA(&mut self, bus: &mut BUS) -> u8;
    fn STX(&mut self, bus: &mut BUS) -> u8;
    fn STY(&mut self, bus: &mut BUS) -> u8;
    fn TAX(&mut self, bus: &mut BUS) -> u8;
    fn TAY(&mut self, bus: &mut BUS) -> u8;
    fn TSX(&mut self, bus: &mut BUS) -> u8;
    fn TXA(&mut self, bus: &mut BUS) -> u8;
    fn TXS(&mut self, bus: &mut BUS) -> u8;
    fn TYA(&mut self, bus: &mut BUS) -> u8;
    fn XXX(&mut self, bus: &mut BUS) -> u8;
}
